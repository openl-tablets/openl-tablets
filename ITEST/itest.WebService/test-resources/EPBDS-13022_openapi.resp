HTTP/1.1 200
Content-Type: application/json

{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "Auto-generated OpenAPI schema from the OpenL rules",
    "title" : "EPBDS-13022_EPBDS-13022",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://example.com/EPBDS-13022/EPBDS-13022"
  } ],
  "paths" : {
    "/main1" : {
      "post" : {
        "description" : "Rules method: SpreadsheetResultmain1 main1(SpreadsheetResultm4 m4)",
        "operationId" : "main1",
        "parameters" : [ {
          "example" : "en-GB",
          "in" : "header",
          "name" : "Accept-Language",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Main1Request"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Main1"
                }
              }
            },
            "description" : "Successful operation"
          },
          "204" : {
            "description" : "Successful operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Cannot parse 'bar' to JSON",
                  "type" : "BAD_REQUEST"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description" : "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "Example 1" : {
                    "description" : "Example 1",
                    "value" : {
                      "message" : "Some message",
                      "type" : "USER_ERROR"
                    }
                  },
                  "Example 2" : {
                    "description" : "Example 2",
                    "value" : {
                      "message" : "Some message",
                      "code" : "code.example",
                      "type" : "USER_ERROR"
                    }
                  }
                },
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JAXRSUserErrorResponse"
                  }, {
                    "$ref" : "#/components/schemas/JAXRSErrorResponse"
                  } ]
                }
              }
            },
            "description" : "Custom user errors in rules or validation errors in input parameters"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Failed to load lazy method.",
                  "type" : "COMPILATION"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description" : "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary" : "Main1 main1(IRulesRuntimeContext, M4)"
      }
    },
    "/main2" : {
      "post" : {
        "description" : "Rules method: SpreadsheetResultmain2 main2(SpreadsheetResultx4 x4)",
        "operationId" : "main2",
        "parameters" : [ {
          "example" : "en-GB",
          "in" : "header",
          "name" : "Accept-Language",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Main2Request"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Main2"
                }
              }
            },
            "description" : "Successful operation"
          },
          "204" : {
            "description" : "Successful operation"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Cannot parse 'bar' to JSON",
                  "type" : "BAD_REQUEST"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description" : "Invalid request format e.g. missing required field, unparseable JSON value, etc."
          },
          "422" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "Example 1" : {
                    "description" : "Example 1",
                    "value" : {
                      "message" : "Some message",
                      "type" : "USER_ERROR"
                    }
                  },
                  "Example 2" : {
                    "description" : "Example 2",
                    "value" : {
                      "message" : "Some message",
                      "code" : "code.example",
                      "type" : "USER_ERROR"
                    }
                  }
                },
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/JAXRSUserErrorResponse"
                  }, {
                    "$ref" : "#/components/schemas/JAXRSErrorResponse"
                  } ]
                }
              }
            },
            "description" : "Custom user errors in rules or validation errors in input parameters"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "message" : "Failed to load lazy method.",
                  "type" : "COMPILATION"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/JAXRSErrorResponse"
                }
              }
            },
            "description" : "Internal server errors e.g. compilation or parsing errors, runtime exceptions, etc."
          }
        },
        "summary" : "Main2 main2(IRulesRuntimeContext, X4)"
      }
    }
  },
  "components" : {
    "schemas" : {
      "AnySpreadsheetResult" : {
        "type" : "object",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/M1"
        }, {
          "$ref" : "#/components/schemas/M2"
        }, {
          "$ref" : "#/components/schemas/M3"
        }, {
          "$ref" : "#/components/schemas/M4"
        }, {
          "$ref" : "#/components/schemas/Main1"
        }, {
          "$ref" : "#/components/schemas/Main2"
        }, {
          "$ref" : "#/components/schemas/X1"
        }, {
          "$ref" : "#/components/schemas/X2"
        }, {
          "$ref" : "#/components/schemas/X3"
        }, {
          "$ref" : "#/components/schemas/X4"
        }, {
          "$ref" : "#/components/schemas/X5"
        }, {
          "$ref" : "#/components/schemas/X6"
        } ]
      },
      "DefaultRulesRuntimeContext" : {
        "type" : "object",
        "properties" : {
          "currentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lob" : {
            "type" : "string"
          },
          "nature" : {
            "type" : "string"
          },
          "usState" : {
            "type" : "string",
            "enum" : [ "AL", "AK", "AS", "AZ", "AR", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "MP", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VI", "VA", "WA", "WV", "WI", "WY" ]
          },
          "country" : {
            "type" : "string",
            "enum" : [ "AE", "AL", "AR", "AS", "AT", "AU", "BA", "BE", "BG", "BH", "BO", "BR", "BY", "CA", "CH", "CK", "CL", "CN", "CO", "CR", "CS", "CY", "CZ", "DE", "DK", "DO", "DZ", "EC", "EE", "EG", "ES", "FI", "FJ", "FR", "GB", "GR", "GT", "HK", "HN", "HR", "HU", "ID", "IE", "IL", "IN", "IQ", "IS", "IT", "JO", "JP", "KW", "LB", "LT", "LU", "LV", "MA", "MK", "MT", "MX", "MY", "NI", "NL", "NO", "NZ", "OM", "PA", "PE", "PG", "PH", "PL", "PR", "PT", "PY", "QA", "RO", "RU", "SA", "SB", "SD", "SE", "SG", "SI", "SK", "SV", "SY", "TH", "TN", "TO", "TR", "TW", "UA", "US", "UY", "VE", "VN", "VU", "WS", "YE", "ZA" ]
          },
          "usRegion" : {
            "type" : "string",
            "enum" : [ "MW", "NE", "SE", "SW", "W" ]
          },
          "currency" : {
            "type" : "string",
            "enum" : [ "ALL", "DZD", "ARS", "AUD", "BHD", "BYR", "BOB", "BAM", "BRL", "CAD", "CLP", "CNY", "COP", "CRC", "HRK", "CZK", "DKK", "DOP", "EGP", "EUR", "GTQ", "HNL", "HKD", "HUF", "ISK", "INR", "IDR", "IQD", "ILS", "JPY", "JOD", "KWD", "LVL", "LBP", "LTL", "MKD", "MYR", "MXN", "MAD", "NZD", "NIO", "NOK", "OMR", "PAB", "PYG", "PEN", "PHP", "PLN", "QAR", "RON", "RUB", "SAR", "RSD", "SGD", "ZAR", "SDG", "SEK", "CHF", "SYP", "TWD", "THB", "TND", "TRY", "UAH", "AED", "GBP", "USD", "UYU", "VEF", "VND", "YER" ]
          },
          "lang" : {
            "type" : "string",
            "enum" : [ "ALB", "ARA", "BEL", "BUL", "CAT", "CHI", "SCR", "CZE", "DAN", "DUT", "ENG", "FIN", "FRE", "GER", "GRE", "HEB", "HIN", "HUN", "IND", "GLE", "ITA", "JPN", "LAV", "LIT", "MAC", "MAY", "MLT", "NOR", "POL", "POR", "RUM", "RUS", "SCC", "SLO", "SPA", "THA", "TUR", "UKR", "VIE" ]
          },
          "region" : {
            "type" : "string",
            "enum" : [ "NCSA", "EU", "EMEA", "APJ" ]
          },
          "caProvince" : {
            "type" : "string",
            "enum" : [ "AB", "BC", "PE", "MB", "NB", "NS", "NU", "ON", "QC", "SK", "NL", "YT", "NT" ]
          },
          "caRegion" : {
            "type" : "string",
            "enum" : [ "QC", "HQ" ]
          },
          "locale" : {
            "type" : "string"
          }
        }
      },
      "JAXRSErrorResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "USER_ERROR", "RULES_RUNTIME", "COMPILATION", "SYSTEM", "BAD_REQUEST", "VALIDATION" ]
          }
        }
      },
      "JAXRSUserErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "M1" : {
        "type" : "object",
        "properties" : {
          "Step1" : {
            "type" : "string"
          }
        }
      },
      "M2" : {
        "type" : "object",
        "properties" : {
          "Step2" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Step3" : {
            "$ref" : "#/components/schemas/M1"
          }
        }
      },
      "M3" : {
        "type" : "object",
        "properties" : {
          "Step4" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/M2"
            }
          }
        }
      },
      "M4" : {
        "type" : "object",
        "properties" : {
          "Step5" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/M3"
            }
          }
        }
      },
      "Main1" : {
        "type" : "object",
        "properties" : {
          "Step1" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "Main1Request" : {
        "type" : "object",
        "properties" : {
          "runtimeContext" : {
            "$ref" : "#/components/schemas/DefaultRulesRuntimeContext"
          },
          "m4" : {
            "$ref" : "#/components/schemas/M4"
          }
        }
      },
      "Main2" : {
        "type" : "object",
        "properties" : {
          "Step1" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "Step2" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Main2Request" : {
        "type" : "object",
        "properties" : {
          "runtimeContext" : {
            "$ref" : "#/components/schemas/DefaultRulesRuntimeContext"
          },
          "x4" : {
            "$ref" : "#/components/schemas/X4"
          }
        }
      },
      "X2X5" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/X2"
        }, {
          "$ref" : "#/components/schemas/X5"
        } ]
      },
      "X3" : {
        "type" : "object",
        "properties" : {
          "Step4" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/X2X5"
            }
          }
        }
      },
      "X4" : {
        "type" : "object",
        "properties" : {
          "Step5" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/X3"
            }
          },
          "Step6" : {
            "$ref" : "#/components/schemas/AnySpreadsheetResult"
          }
        }
      },
      "X1" : {
        "type" : "object",
        "properties" : {
          "Step1" : {
            "type" : "string"
          }
        }
      },
      "X2" : {
        "type" : "object",
        "properties" : {
          "Step2" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Step3" : {
            "$ref" : "#/components/schemas/X1"
          }
        }
      },
      "X5" : {
        "type" : "object",
        "properties" : {
          "Step2" : {
            "type" : "integer",
            "format" : "int32"
          },
          "Step3" : {
            "$ref" : "#/components/schemas/X6"
          }
        }
      },
      "X6" : {
        "type" : "object",
        "properties" : {
          "Step1" : {
            "type" : "string"
          }
        }
      }
    }
  }
}
