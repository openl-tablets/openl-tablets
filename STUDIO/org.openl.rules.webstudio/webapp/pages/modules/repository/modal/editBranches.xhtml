<ui:composition
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:a4j="http://richfaces.org/a4j"
        xmlns:rich="http://richfaces.org/rich"
        xmlns:ui="http://java.sun.com/jsf/facelets">

    <style>
        #projectBranchesList {
            max-height: 400px;
            overflow-y: auto;
        }
    </style>

    <rich:popupPanel id="modalEditBranches" minWidth="530" autosized="true">
        <f:facet name="header">
            <h:outputText value="Manage branches"/>
        </f:facet>

        <f:facet name="controls">
            <h:graphicImage value="/images/close.gif" class="close" alt="Close" title="Close"
                            onclick="RichFaces.$('modalEditBranches').hide();"/>
        </f:facet>

        <h:form id="editBranchesForm">
            <h:panelGroup id="modalEditBranchesData">
                <p>Branches where the project <span id="projectBusinessName"/> is used:</p>

                <div id="projectBranchesList"></div>
            </h:panelGroup>

            <footer>
                <input type="button"  id="saveBranches" value="Save" class="button-primary"/>
                <input type="button" value="Cancel" onclick="RichFaces.$('modalEditBranches').hide();"/>
            </footer>
        </h:form>
    </rich:popupPanel>

    <a4j:jsFunction name="rerenderNodeView" render="nodeView"></a4j:jsFunction>

    <script>
        //<![CDATA[

        function openEditBranchesDialog(repositoryId, projectName) {
            const projectId = btoa(repositoryId + ":" + projectName);

            const availableBranchesRequest = $j.get("#{contextPath}/web/repos/" + repositoryId + "/branches");
            const projectDataRequest = $j.get("#{contextPath}/web/projects/" + projectId);

            $j.when(availableBranchesRequest, projectDataRequest).done((availableRes, projectDataRes) => {
                const availableBranches = availableRes[0];
                const projectData = projectDataRes[0];

                $j("#projectBusinessName").text(projectData.name);

                const container = $j("#projectBranchesList");
                container.empty();

                availableBranches.forEach(branch => {
                    const checkbox = $j('<input type="checkbox">')
                        .attr("value", branch)
                        .attr("name", "branches")
                        .prop("checked", projectData.selectedBranches.includes(branch));

                    if (branch === projectData.branch) {
                        checkbox.prop("disabled", true);
                    }

                    const label = $j('<label>').append(checkbox).append(" " + branch);
                    container.append(label).append("<br>");
                });

                RichFaces.$('modalEditBranches').show();
            }).fail(() => {
                alert("Failed to load branch information.");
            });

            $j("#saveBranches").off("click").on("click", () => {
                const selected = $j("#projectBranchesList input:checked")
                    .map((i, checkbox) => checkbox.value)
                    .get();

                $j.ajax({
                    url: "#{contextPath}/web/projects/" + projectId,
                    method: "PATCH",
                    contentType: "application/json",
                    data: JSON.stringify({
                        selectedBranches: selected
                    }),
                }).done(() => {
                    RichFaces.$('modalEditBranches').hide();
                    rerenderNodeView();
                })
            });
        }

        //]]>
    </script>
</ui:composition>
