<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns:h="http://java.sun.com/jsf/html"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
>
    <ui:param name="settings" value="#{repository.settings}" />
    <ui:param name="validators" value="#{settings.validators}" />
    <ui:param name="isDesignRepo" value="#{repoType eq 'DESIGN'}" />

    <div id="#{prependId}remoteRepositoryShowInfo" class="hidden">
        If checked, use remote Git repository. OpenL Studio will pull and push changes to it.<br/>
        If unchecked, repository is stored in local file system only.
    </div>
    <div id="#{prependId}URLShowInfo" class="hidden">
        Remote URL or local path to Git repository.<br/><br/>
        <b>For example: </b>https://github.com/git-repo/git-repo.git or /var/local-git-repo
    </div>
    <div id="#{prependId}localPathShowInfo" class="hidden">
        A local path to directory for Git repository. Webstudio uses this specified path to upload Git repository from the server and works with it.<br/><br/> 
        <b>NOTE: </b>Read/Write rights for specified directory is mandatory for Webstudio.         
    </div>
    <div id="#{prependId}branchShowInfo" class="hidden">
        The main branch to commit changes. Usually, 'master' branch. 
    </div>
    <div id="#{prependId}ProtectedBranchesShowInfo" class="hidden">
        The list of protected branches must be comma separated.<br/>
        <ul>
            <li><b>?</b> - maches any single characters</li>
            <li><b>*</b> - matches simple branch names like <b>master</b>. If a branch name has a path separator, it will be skipped</li>
            <li><b>**</b> - matches all branches</li>
            <li><b>*.*</b> - matches simple branches containing a dot</li>
            <li><b>*.{10,11}</b> - matches branch ending with <b>.10</b> or <b>.11</b></li>
        </ul><br/>
        <b>Example: </b>release-*
    </div>
    <div id="#{prependId}newBranchTemplateShowInfo" class="hidden">
        This is a pattern for new branches in Git repository.<br/><br/>
        <ul>
            <li>{project-name} is replaced by project name.</li>
            <li>{username} is replaced by username.</li>
            <li>{current-date} is replaced by current date.</li>
        </ul><br/><br/>
        <b>NOTE: </b>Must not contain the following characters: \ : * ? " ' &lt; &gt; | { } ~ ^
    </div>
    <div id="#{prependId}regexValidation" class="hidden">
        Additional regular expression that will be used to validate the name of the new branch.
    </div>
    <div id="#{prependId}validationErrorMessage" class="hidden">
        An error message that will be shown to the user when trying to create a new branch with a name that does not match the additional regular expression.
    </div>

    <h:panelGrid columns="3" columnClasses="titleColumn" id="#{prependId}gitSettings">
        <h:outputLabel value="Remote repository:" for="#{prependId}gitRemoteRepository"/>
        <h:selectBooleanCheckbox id="#{prependId}gitRemoteRepository" value="#{settings.remoteRepository}">
            <f:ajax event="change" execute="#{prependId}gitSettings" render="#{prependId}gitSettings"/>
        </h:selectBooleanCheckbox>
        <h:link value="" style="background: url('webresource/images/info.png'); display: inline-block;" class="imageButton" onclick="showShowInfo('#{prependId}remoteRepositoryShowInfo');return false;" title="Details"/>

        <h:outputText value="URL:" styleClass="required" rendered="#{settings.remoteRepository}"/>
        <h:inputText value="#{settings.uri}" id="#{prependId}gitUri" validator="#{validators.url}"
                     rendered="#{settings.remoteRepository}"/>
        <h:link value="" style="background: url('webresource/images/info.png'); display: inline-block;"
                class="imageButton" onclick="showShowInfo('#{prependId}URLShowInfo');return false;" title="Details"
                rendered="#{settings.remoteRepository}"/>

        <h:outputText value="" rendered="#{settings.remoteRepository}"/>
        <h:message for="#{prependId}gitUri" styleClass="error" rendered="#{settings.remoteRepository}"/>
        <h:outputText value="" rendered="#{settings.remoteRepository}"/>
        
        <h:outputText value="Login:" rendered="#{settings.remoteRepository}"/>
        <h:inputText value="#{settings.login}" rendered="#{settings.remoteRepository}"/>
        <h:outputText value="" rendered="#{settings.remoteRepository}"/>
        
        <h:outputText value="Password:" rendered="#{settings.remoteRepository}"/>
        <h:inputSecret value="#{settings.password}" redisplay="true" rendered="#{settings.remoteRepository}"/>
        <h:outputText value="" rendered="#{settings.remoteRepository}"/>

        <h:outputText value="Local path:" styleClass="required"/>
        <h:inputText value="#{settings.localRepositoryPath}" title="Local path to directory for Git repository."
                     id="#{prependId}gitLocalRepositoryPath" validator="#{validators.localRepositoryPath}"/>
        <h:link value="" style="background: url('webresource/images/info.png'); display: inline-block;" class="imageButton" onclick="showShowInfo('#{prependId}localPathShowInfo');return false;" title="Details"/>
        
        <h:outputText value=""/>
        <h:message for="#{prependId}gitLocalRepositoryPath" styleClass="error"/>
        <h:outputText value=""/>

        <h:outputText value="Branch:" rendered="#{settings.remoteRepository}"/>
        <h:inputText value="#{settings.branch}" title="The main branch to commit changes."
                     id="#{prependId}gitBranch"
                     rendered="#{settings.remoteRepository}"/>
        <h:link value="" style="background: url('webresource/images/info.png'); display: inline-block;"
                class="imageButton" onclick="showShowInfo('#{prependId}branchShowInfo');return false;" title="Details"
                rendered="#{settings.remoteRepository}"/>

        <h:outputText value="Protected branches:"/>
        <h:inputText value="#{settings.protectedBranches}" title="The list of protected branches."
                     id="#{prependId}gitProtectedBranches"
                     validator="#{validators.protectedBranches}"/>
        <h:link value="" style="background: url('webresource/images/info.png'); display: inline-block;"
                class="imageButton" onclick="showShowInfo('#{prependId}ProtectedBranchesShowInfo');return false;" title="Details"/>

        <h:outputText value=""/>
        <h:message for="#{prependId}gitProtectedBranches" styleClass="error"/>
        <h:outputText value=""/>

        <h:outputText value="" rendered="#{settings.remoteRepository}"/>
        <h:message for="#{prependId}gitBranch" styleClass="error" rendered="#{settings.remoteRepository}"/>
        <h:outputText value="" rendered="#{settings.remoteRepository}"/>

        <h:outputText value=" " rendered="#{isDesignRepo}"/>
        <h:outputText value=""/>
        <h:outputText value=""/>

        <h:outputText value="New branch:" rendered="#{isDesignRepo}"/>
        <h:outputText value=""/>
        <h:outputText value=""/>

        <h:outputText value="Default branch name:" rendered="#{isDesignRepo}"/>
        <h:inputText value="#{settings.newBranchTemplate}" title="This pattern is used for new branches."
                     id="#{prependId}newBranchTemplate" rendered="#{isDesignRepo}"
                     validator="#{validators.newBranchNamePatternValidator}">
        </h:inputText>
        <h:link value="" style="background: url('webresource/images/info.png'); display: inline-block;" class="imageButton" onclick="showShowInfo('#{prependId}newBranchTemplateShowInfo');return false;" title="Details" rendered="#{isDesignRepo}"/>

        <h:outputText value=""/>
        <h:message for="#{prependId}newBranchTemplate" styleClass="error"/>
        <h:outputText value=""/>

        <h:outputText value="Branch name pattern:" rendered="#{isDesignRepo}"/>
        <h:inputText value="#{settings.newBranchRegex}" title="Additional regex for new branches."
                     id="#{prependId}regexValidation" rendered="#{isDesignRepo}" validator="#{validators.newBranchRegex}">
        </h:inputText>
        <h:link value="" style="background: url('webresource/images/info.png'); display: inline-block;" class="imageButton" onclick="showShowInfo('#{prependId}regexValidation');return false;" title="Details" rendered="#{isDesignRepo}"/>
        <h:outputText value=""/>
        <h:message for="#{prependId}regexValidation" styleClass="error"/>
        <h:outputText value=""/>

        <h:outputText value="Invalid branch name message hint:" rendered="#{isDesignRepo}"/>
        <h:inputText value="#{settings.newBranchRegexError}" title="Error message for regex validation."
                     id="#{prependId}validationErrorMessage" rendered="#{isDesignRepo}">
        </h:inputText>
        <h:link value="" style="background: url('webresource/images/info.png'); display: inline-block;" class="imageButton" onclick="showShowInfo('#{prependId}validationErrorMessage');return false;" title="Details" rendered="#{isDesignRepo}"/>

        <h:outputText value=" " rendered="#{isDesignRepo}"/>
        <h:outputText value="" />
        <h:outputText value=""/>

        <h:outputText value="Changes check interval (sec):" rendered="#{settings.remoteRepository}"/>
        <h:inputText value="#{settings.listenerTimerPeriod}" id="#{prependId}gitListenerTimerPeriod"
                     title="Repository changes check interval. Must be greater than zero."
                     validatorMessage="Enter a value greater than zero."
                     converterMessage="Must be a number greater than zero."
                     rendered="#{settings.remoteRepository}">
            <f:validateLongRange minimum="1" />
        </h:inputText>
        <h:outputText value="" rendered="#{settings.remoteRepository}"/>
                
        <h:outputText value="" rendered="#{settings.remoteRepository}"/>
        <h:message for="#{prependId}gitListenerTimerPeriod" styleClass="error" rendered="#{settings.remoteRepository}"/>
        <h:outputText value="" rendered="#{settings.remoteRepository}"/>

        <h:outputText value="Connection timeout (sec):" rendered="#{settings.remoteRepository}"/>
        <h:inputText value="#{settings.connectionTimeout}" id="#{prependId}gitConnectionTimeout"
                     title="Repository connection timeout. Must be greater than zero."
                     validatorMessage="Enter a value greater than zero."
                     converterMessage="Must be a number greater than zero."
                     rendered="#{settings.remoteRepository}">
            <f:validateLongRange minimum="1" />
        </h:inputText>
        <h:outputText value="" rendered="#{settings.remoteRepository}"/>

        <h:outputText value="" rendered="#{settings.remoteRepository}"/>
        <h:message for="#{prependId}gitConnectionTimeout" styleClass="error" rendered="#{settings.remoteRepository}"/>
        <h:outputText value="" rendered="#{settings.remoteRepository}"/>
    </h:panelGrid>
    
    <h:panelGroup rendered="#{isDesignRepo}">
        <ui:include src="/pages/modules/administration/settings/commentSettings.xhtml">
            <ui:param name="prependId" value="#{prependId}Git"/>
            <ui:param name="repository" value="#{repository}" />
            <ui:param name="repoType" value="#{repoType}" />
        </ui:include>
    </h:panelGroup>

</ui:composition>
