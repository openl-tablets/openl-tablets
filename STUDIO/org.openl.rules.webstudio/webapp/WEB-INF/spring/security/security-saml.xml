<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="common-authentication.xml"/>
    <import resource="authorization.xml"/>

    <!-- Scan for auto-wiring classes in spring saml packages -->
    <context:component-scan base-package="org.springframework.security.saml2"/>

    <bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
        <property name="requestRejectedHandler" ref="requestRejectedHandler"/>
        <security:filter-chain-map request-matcher="ant">
            <security:filter-chain pattern="/favicon.ico" filters="none"/>
            <security:filter-chain pattern="/favicon.svg" filters="none"/>
            <security:filter-chain pattern="/css/**" filters="none"/>
            <security:filter-chain pattern="/icons/**" filters="none"/>
            <security:filter-chain pattern="/images/**" filters="none"/>
            <security:filter-chain pattern="/javascript/**" filters="none"/>
            <security:filter-chain pattern="/faces/javax.faces.resource/**" filters="none"/>
            <security:filter-chain pattern="/faces/rfRes/**" filters="none"/>
            <security:filter-chain pattern="/org.richfaces.resources/**" filters="none"/>
            <security:filter-chain pattern="/faces/tableEditor/css/**" filters="none"/>
            <security:filter-chain pattern="/faces/tableEditor/img/**" filters="none"/>
            <security:filter-chain pattern="/faces/tableEditor/js/**" filters="none"/>
            <security:filter-chain pattern="/faces/pages/public/**" filters="none"/>
            <security:filter-chain pattern="/web/public/**" filters="none"/>
            <security:filter-chain pattern="/rest/api-docs/**" filters="none"/>
            <security:filter-chain pattern="/security_logout"
                                   filters="securityContextPersistenceFilter,logoutFilter"/>
            <security:filter-chain pattern="/saml2/service-provider-metadata/**"
                                   filters="securityContextPersistenceFilter,metadataGeneratorFilter"/>
            <security:filter-chain pattern="/login/saml2/**"
                                   filters="securityContextPersistenceFilter,samlFilter"/>
            <security:filter-chain pattern="/saml2/authenticate/**"
                                   filters="securityContextPersistenceFilter,samlRequestFilter"/>
            <security:filter-chain pattern="/**"
                                   filters="securityContextPersistenceFilter,logoutFilter,exceptionTranslationFilter,
                                   filterSecurityInterceptor"/>
        </security:filter-chain-map>
    </bean>

    <!-- ============================ Define needed beans for dependencies ====================================== -->

    <util:list id="authenticationProviders">
        <ref bean="authenticationProviderWrapper"/>
    </util:list>

    <bean id="canCreateInternalUsers" class="java.lang.Boolean">
        <constructor-arg type="boolean" value="false"/>
    </bean>

    <bean id="loginUrl" class="java.lang.String">
        <constructor-arg value="/saml2/authenticate/webstudio"/>
    </bean>

    <!-- ======================== Logout ========================== -->

    <bean id="accessDeniedUrl" class="java.lang.String">
        <constructor-arg value="/faces/pages/accessDenied.xhtml"/>
    </bean>

    <!-- Handler deciding where to redirect user after failed login -->
    <bean id="failureRedirectHandler"
          class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <property name="defaultFailureUrl" ref="accessDeniedUrl"/>
    </bean>

    <bean id="logoutSuccessUrl" class="java.lang.String">
        <constructor-arg value="/"/>
    </bean>

    <bean id="logoutUrl" class="java.lang.String">
        <constructor-arg value="/security_logout"/>
    </bean>

    <util:list id="logoutHandlers">
        <bean class="org.openl.security.saml.SamlLogoutSuccessHandler">
            <constructor-arg name="requestResolver">
                <bean class="org.springframework.security.saml2.provider.service.web.authentication.logout.OpenSaml4LogoutRequestResolver">
                    <constructor-arg name="relyingPartyRegistrationResolver" ref="relyingPartyRegistrationResolver"/>
                </bean>
            </constructor-arg>
        </bean>
    </util:list>

    <bean id="samlLogoutFilter"
          class="org.springframework.security.saml2.provider.service.web.authentication.logout.Saml2LogoutRequestFilter">
        <constructor-arg name="relyingPartyRegistrationResolver" ref="relyingPartyRegistrationResolver"/>
        <constructor-arg name="logoutRequestValidator">
            <bean class="org.springframework.security.saml2.provider.service.authentication.logout.OpenSamlLogoutRequestValidator"/>
        </constructor-arg>
        <constructor-arg name="logoutResponseResolver">
            <bean class="org.springframework.security.saml2.provider.service.web.authentication.logout.OpenSaml4LogoutResponseResolver">
                <constructor-arg name="relyingPartyRegistrationResolver" ref="relyingPartyRegistrationResolver"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handlers" ref="logoutHandlers"/>
    </bean>

    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg name="logoutSuccessUrl" ref="logoutSuccessUrl"/>
        <constructor-arg name="handlers" ref="logoutHandlers"/>
        <property name="filterProcessesUrl" ref="logoutUrl"/>
    </bean>

    <!-- ============================== SAML ==================================================================== -->

    <bean id="successRedirectHandler"
          class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
        <property name="defaultTargetUrl" value="/"/>
        <property name="targetUrlParameter" value="openl-redirect"/>
    </bean>

    <bean id="authenticationEntryPoint"
          class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" ref="loginUrl"/>
    </bean>

    <bean id="openLSamlBuilder"
          class="org.openl.security.saml.OpenLSamlBuilder">
        <constructor-arg name="propertyResolver" ref="environment"/>
    </bean>

    <bean id="relyingPartyRegistration"
          class="org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistration"
          factory-bean="openLSamlBuilder" factory-method="relyingPartyRegistration">
    </bean>

    <bean id="authenticationRequestContextResolver"
          class="org.springframework.security.saml2.provider.service.web.Saml2AuthenticationRequestContextResolver"
          factory-bean="openLSamlBuilder" factory-method="authenticationRequestContextResolver">
    </bean>

    <bean id="relyingPartyRegistrationResolver"
          class="org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistration"
          factory-bean="openLSamlBuilder" factory-method="relyingPartyRegistrationResolver">
    </bean>

    <bean id="samlRequestFilter"
          class="org.springframework.security.saml2.provider.service.servlet.filter.Saml2WebSsoAuthenticationRequestFilter">
        <constructor-arg name="authenticationRequestContextResolver" ref="authenticationRequestContextResolver"/>
        <constructor-arg name="authenticationRequestFactory">
            <bean class="org.springframework.security.saml2.provider.service.authentication.OpenSaml4AuthenticationRequestFactory"/>
        </constructor-arg>
    </bean>

    <bean id="responseAuthenticationConverter" class="org.openl.security.saml.OpenLResponseAuthenticationConverter">
        <constructor-arg name="propertyResolver" ref="environment"/>
        <constructor-arg name="syncUserData" ref="syncUserData"/>
        <constructor-arg name="privilegeMapper" ref="privilegeMapper"/>
    </bean>

    <bean id="samlFilter"
          class="org.springframework.security.saml2.provider.service.servlet.filter.Saml2WebSsoAuthenticationFilter">
        <constructor-arg name="relyingPartyRegistrationRepository" ref="relyingPartyRegistration"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="successRedirectHandler"/>
        <property name="sessionAuthenticationStrategy" ref="sessionAuthenticationStrategy"/>
    </bean>

    <bean id="samlAuthenticationProvider"
          class="org.springframework.security.saml2.provider.service.authentication.OpenSaml4AuthenticationProvider"
          factory-bean="openLSamlBuilder" factory-method="openSaml4AuthenticationProvider">
        <property name="responseAuthenticationConverter" ref="responseAuthenticationConverter"/>
    </bean>

    <bean id="authenticationProviderWrapper"
          class="org.openl.rules.webstudio.security.OpenLAuthenticationProviderWrapper">
        <constructor-arg name="delegate" ref="samlAuthenticationProvider"/>
    </bean>

    <bean id="metadataGeneratorFilter"
          class="org.springframework.security.saml2.provider.service.web.Saml2MetadataFilter">
        <constructor-arg name="relyingPartyRegistrationResolver" ref="relyingPartyRegistrationResolver"/>
        <constructor-arg name="saml2MetadataResolver">
            <bean class="org.springframework.security.saml2.provider.service.metadata.OpenSamlMetadataResolver"/>
        </constructor-arg>
    </bean>

</beans>
