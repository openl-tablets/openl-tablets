<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Note the order that entries are placed against the objectDefinitionSource is critical.
      The FilterSecurityInterceptor will work from the top of the list down to the FIRST pattern that matches the request URL.
      Accordingly, you should place MOST SPECIFIC (ie a/b/c/d.*) expressions first, with LEAST SPECIFIC (ie a/.*) expressions last -->
    <bean id="filterSecurityInterceptor"
          class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
        <property name="securityMetadataSource">
            <security:filter-security-metadata-source request-matcher="ant" use-expressions="false">
                <security:intercept-url pattern="/faces/pages/modules/administration/**" access="ADMIN"/>
                <security:intercept-url pattern="/web/acl/repo/**" access="ADMIN"/>
                <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_REMEMBERED"/>
            </security:filter-security-metadata-source>
        </property>
    </bean>

    <bean id="webPrivilegeEvaluator"
          class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator">
        <constructor-arg ref="filterSecurityInterceptor"/>
    </bean>

    <!-- ======================== Roles ========================== -->
    <bean id="roleVoter" class="org.openl.rules.security.AccessVoter"/>
    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false"/>
        <constructor-arg name="decisionVoters">
            <list>
                <ref bean="roleVoter"/>
            </list>
        </constructor-arg>
    </bean>

    <bean class="org.openl.rules.security.config.MethodSecurityConfig"/>

</beans>
