# This workflow will release OpenL artifacts to the Central Maven repository.

name: Release OpenL Tablets

on:
  # Manual run from the GitHub action page
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: false
      release:
        description: 'Release version'
        required: false
      snapshot:
        description: 'Snapshot version'
        required: false

jobs:
  release:

    name: Release

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:

      - name: Configure GIT
        run: |
          git config --global user.name "OpenL Tablets"
          git config --global user.email openltablets@gmail.com
          git config --global core.autocrlf false

      - name: Checkout ${{ github.event.inputs.branch }}
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.branch }}
          path: release

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Prepare release
        working-directory: ./release
        run: >
          mvn release:prepare "-Dstyle.color=always"
          -DdevelopmentVersion=${{ github.event.inputs.snapshot }}
          -DreleaseVersion=${{ github.event.inputs.release }}
          -DautoVersionSubmodules=true
          -DtagNameFormat=@{project.version}
          -DpreparationGoals="clean"
          -DpushChanges=false

      - name: Show commits
        working-directory: ./release
        run: git log --decorate -n 5

      - name: Stage GIT repository
        run: git clone -n --no-hardlinks ./release ./build

      - name: Checkout the latest tag
        working-directory: ./build
        run: |
          latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo checking out ${latestTag}
          git checkout ${latestTag}
          git log --decorate -n 20 --all --oneline --graph
          echo "RELEASE_TAG=${latestTag}" >> $GITHUB_ENV

      - name: Build & Deploy to local staging repository
        run: >
          mvn -f ./build/pom.xml "-Dstyle.color=always"
          deploy
          -Psources,gpg-sign
          -DnoPerf
          -DaltDeploymentRepository=local-staging::default::file:./mvn-staging
          -Duser.name=${{ github.actor }}
        env:
          SIGN_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          SIGN_KEY_PASS: ${{ secrets.OSSRH_GPG_PASSPHRASE }}

      - name: Store release.zip
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: mvn-staging
          retention-days: 10

      - name: Store release.zip (local)
        working-directory: ./mvn-staging
        run: >
          zip -r ../release.zip .

      - name: Upload to https://central.sonatype.com/
        run: >
          curl --request POST
          --verbose
          --header "Authorization: Bearer $(echo ${{ secrets.OSSRH_USERNAME }}:${{ secrets.OSSRH_TOKEN }} | base64)"
          --form "name=OpenL ${{ env.RELEASE_TAG }} by ${{ github.actor }} #${{ github.run_number }}"
          --form bundle=@release.zip
          https://central.sonatype.com/api/v1/publisher/upload

      - name: Push commits
        working-directory: ./release
        run: |
          git push
          git push --tags
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Create release on GitHub
        id: create_release
        working-directory: ./build/DEMO
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          gh release create "${RELEASE_TAG}" \
            --repo "${GITHUB_REPOSITORY}" \
            --title "OpenL Tablets ${RELEASE_TAG} Released" \
            --draft \
            --notes-file - <<-EOF
            **OpenL Tablets ${RELEASE_TAG} is available.**
            More detailed information you can find at [Release Notes ${RELEASE_TAG}](//openl-tablets.org/release-notes?ver=${RELEASE_TAG}).

            All artifacts are ready for Downloads.
            * [Download OpenL Studio](https://repo1.maven.org/maven2/org/openl/rules/org.openl.rules.webstudio/${RELEASE_TAG}/org.openl.rules.webstudio-${RELEASE_TAG}.war)
            * [Download OpenL Rule Services](https://repo1.maven.org/maven2/org/openl/rules/org.openl.rules.ruleservice.ws/${RELEASE_TAG}/org.openl.rules.ruleservice.ws-${RELEASE_TAG}.war)
            * [Download OpenL Rule Services (All)](https://repo1.maven.org/maven2/org/openl/rules/org.openl.rules.ruleservice.ws.all/${RELEASE_TAG}/org.openl.rules.ruleservice.ws.all-${RELEASE_TAG}.war)
            * [Download OpenL DEMO installer](https://github.com/openl-tablets/openl-tablets/releases/download/${RELEASE_TAG}/openl-tablets-demo-${RELEASE_TAG}.zip)

            Enjoy!
          EOF
          echo "${RELEASE_TAG}" > ./openl.version
          zip -r ../../openl-tablets-demo-${RELEASE_TAG}.zip .
          gh release upload "${RELEASE_TAG}" "../../openl-tablets-demo-${RELEASE_TAG}.zip#openl-tablets-demo.zip" --clobber --repo "${GITHUB_REPOSITORY}"
