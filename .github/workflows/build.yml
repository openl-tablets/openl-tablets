# This workflow will build a Java project with Maven on the daily basis (aka Nightly Build).
# Checks all supported environments.
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build

on:
  schedule:
    # Every week at 02:00 UTC
    - cron: '0 2 * * 3'
  # Manual run from the GitHub action page
  workflow_dispatch:
    inputs:
      mavenArgs:
        description: 'Maven goals and parameters'
        required: false
        default: '-DnoPerf'
      branch:
        description: 'Branch to build'
        required: false
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ 21, 25-ea ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    name: Java ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:

        # Docker is not installed on GitHub's Widows and MacOS hosted workers due to virtualization issues
        # (and it's necessary to run testcontainers)
      - name: Switch off dockerized tests
        if: runner.os == 'windows' || runner.os == 'macos'
        run: |
          echo "SETTINGS=-DnoDocker" >> $env:GITHUB_ENV
          echo "SETTINGS=-DnoDocker" >> $GITHUB_ENV

      - name: Configure GIT
        run: |
          git config --global user.name "OpenL Tablets"
          git config --global user.email openltablets@gmail.com
          git config --global core.autocrlf false

      - name: Checkout ${{ github.event.inputs.branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'

      - name: Maven version
        run: mvn -v

      - name: Build with Maven
        run: mvn "-Dstyle.color=always" ${{ env.SETTINGS }} ${{ github.event.inputs.mavenArgs }}
