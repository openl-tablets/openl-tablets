<?xml version="1.0" encoding="UTF-8"?><!-- This file is for releasing OpenL version wIth maven-release-plugin -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.openl.rules</groupId>
    <artifactId>openl-tablets</artifactId>
    <packaging>pom</packaging>
    <version>6.0.0-SNAPSHOT</version>
    <name>OpenL Tablets</name>
    <url>https://openl-tablets.org</url>
    <description>OpenL Tablets rules engine and related frameworks</description>
    <inceptionYear>2004</inceptionYear>
    <licenses>
        <license>
            <name>GNU Lesser General Public License</name>
            <url>http://www.gnu.org/licenses/lgpl.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <organization>
        <name>OpenL Tablets</name>
        <url>https://openl-tablets.org</url>
    </organization>
    <developers>
        <developer>
            <name>Stanislav Shor</name>
        </developer>
        <developer>
            <name>Yury Molchan</name>
            <email>ymolchan@eisgroup.com</email>
            <organization>EIS Group</organization>
            <organizationUrl>https://eisgroup.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+3</timezone>
        </developer>
        <developer>
            <name>Marat Kamalov</name>
        </developer>
        <developer>
            <name>Nail Samatov</name>
        </developer>
        <developer>
            <name>Vlad Pikus</name>
            <email>vpikus@eisgroup.com</email>
            <organization>EIS Group</organization>
            <organizationUrl>https://eisgroup.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+3</timezone>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:https://github.com/openl-tablets/openl-tablets.git</connection>
        <developerConnection>scm:git:git@github.com:openl-tablets/openl-tablets.git</developerConnection>
        <url>https://github.com/openl-tablets/openl-tablets</url>
        <tag>HEAD</tag>
    </scm>
    <repositories>
        <repository>
            <id>shibboleth-releases</id>
            <name>Shibboleth Repository</name>
            <url>https://build.shibboleth.net/nexus/content/repositories/releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- If true, deploying of artifacts will be skipped  -->
        <maven.deploy.skip>false</maven.deploy.skip>
        <maven.install.skip>${maven.deploy.skip}</maven.install.skip>
        <dockerized>false</dockerized>
        <skipTestsForQuick>false</skipTestsForQuick>

        <!-- Managing dependencies versions -->
        <!-- Spring -->
        <spring.framework.version>5.3.39</spring.framework.version>
        <spring.boot.version>2.7.18</spring.boot.version>
        <spring.integration.version>5.5.20</spring.integration.version>

        <!-- Security -->
        <spring.security.version>5.8.16</spring.security.version>
        <opensaml.version>4.3.2</opensaml.version>
        <jose4j.version>0.9.6</jose4j.version>
        <nimbus-jose-jwt.version>10.2</nimbus-jose-jwt.version>
        <json-smart.version>2.5.2</json-smart.version>

        <!-- Bytecode manipulation -->
        <asm.version>9.8</asm.version>
        <byte-buddy.version>1.17.5</byte-buddy.version>

        <!-- Kafka -->
        <kafka.version>4.0.0</kafka.version>
        <snappy-java.version>1.1.10.7</snappy-java.version>

        <!-- Open Telemetry -->
        <opentelemetry.version>2.15.0</opentelemetry.version><!-- !!! also in the Dockerfile !!! -->

        <!-- REST -->
        <jackson.version>2.19.0</jackson.version>
        <cxf.version>3.6.6</cxf.version>

        <!-- gRPC -->
        <grpc.version>1.72.0</grpc.version>

        <!-- OpenAPI -->
        <swagger.core.version>2.2.28</swagger.core.version>
        <swagger.parser.version>2.1.25</swagger.parser.version>

        <!-- Logging -->
        <log4j.version>2.24.3</log4j.version>
        <slf4j.version>2.0.17</slf4j.version>

        <!-- OpenL Maven Plugin -->
        <maven.api.version>3.9.9</maven.api.version>
        <maven.plugin.version>3.15.1</maven.plugin.version>
        <plexus-utils.version>4.0.2</plexus-utils.version>

        <!-- DEMO & ITEST -->
        <jetty.version>10.0.25</jetty.version>

        <!-- Repositories -->
        <amazonaws.version>2.31.35</amazonaws.version>
        <azure.version>12.30.0</azure.version>
        <netty.version>4.2.0.Final</netty.version>
        <jgit.version>6.9.0.202403050737-openl</jgit.version>

        <!-- DB -->
        <h2.version>2.3.232</h2.version>
        <hikaricp.version>6.3.0</hikaricp.version>
        <hibernate.orm.version>5.6.15.Final</hibernate.orm.version>
        <hibernate.validator.version>6.2.5.Final</hibernate.validator.version>

        <!-- Testing -->
        <junit.version>5.12.2</junit.version>
        <junit-pioneer.version>2.3.0</junit-pioneer.version>
        <awaitility.version>4.3.0</awaitility.version>
        <mockito.version>5.17.0</mockito.version>
        <datasource-proxy.version>1.10.1</datasource-proxy.version>
        <xmlunit.version>2.10.0</xmlunit.version>
        <testcontainers.version>1.21.0</testcontainers.version>
        <testcontainers.keycloak.version>2.6.0</testcontainers.keycloak.version>
        <minio.version>8.5.17</minio.version>
        <oracle.version>23.7.0.25.01</oracle.version>
        <postgresql.version>42.7.5</postgresql.version>
        <mariadb.version>2.7.12</mariadb.version>
        <mssql.version>12.10.0.jre11</mssql.version>
        <jmh.version>1.37</jmh.version>

        <!-- javax & Jakarta APIs -->
        <jakarta.annotation-api.version>1.3.5</jakarta.annotation-api.version>
        <jakarta.activation.version>1.2.2</jakarta.activation.version>
        <jakarta.ws.rs-api.version>2.1.6</jakarta.ws.rs-api.version>
        <jakarta.xml.ws-api.version>2.3.3</jakarta.xml.ws-api.version>
        <jakarta.xml.bind-api.version>2.3.3</jakarta.xml.bind-api.version>
        <jaxb-runtime.version>2.3.9</jaxb-runtime.version>
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
        <javax.websocket-api.version>1.1</javax.websocket-api.version>

        <!-- Cache -->
        <javax.cache-api.version>1.1.1</javax.cache-api.version>
        <cache2k.version>2.6.1.Final</cache2k.version>

        <!-- Mail -->
        <jakarta.mail.version>1.6.7</jakarta.mail.version>
        <greenmail.version>1.6.15</greenmail.version>

        <!-- Commons and utils -->
        <commons.codec.version>1.18.0</commons.codec.version>
        <commons.compress.version>1.27.1</commons.compress.version>
        <commons.collections4.version>4.5.0</commons.collections4.version>
        <commons.io.version>2.19.0</commons.io.version>
        <commons.lang3.version>3.17.0</commons.lang3.version>

        <!-- protocols -->
        <gson.version>2.13.1</gson.version>

        <bouncycastle.version>1.80</bouncycastle.version>
        <groovy.version>4.0.26</groovy.version>
        <poi.version>5.4.1</poi.version>
        <aspectj.version>1.9.24</aspectj.version>
        <velocity.version>2.4.1</velocity.version>
        <guava.version>33.4.8-jre</guava.version>
        <xmlsec.version>2.3.5</xmlsec.version>
        <jcodemodel.version>3.4.1</jcodemodel.version>
        <istack.version>3.0.12</istack.version>
        <x-forwarded-filter.version>1.0</x-forwarded-filter.version>

        <!-- It needs to detect memory leaks. -->
        <!-- !!! Don't increase these parameters without special need !!! -->
        <!-- 48MB Should be enough to don't fall in OutOfMemoryError. It equals to MaxNonGCSize=30MB + ~50%-->
        <!-- 128MB allows do not worry about OutOfMemoryError. It equals to MaxNonGCSize=30MB + ~350% -->
        <surefire.argLine.noPerf>-Xms8m -Xmx128m -Xss256k -XX:MaxMetaspaceSize=160m</surefire.argLine.noPerf>
        <!-- Fine tuned settings to detects memory and performance issues -->
        <surefire.argLine.perf>-Xms8m -Xmx60m -Xss256k -XX:MaxMetaspaceSize=160m</surefire.argLine.perf>
        <surefire.argLine.opts /> <!-- Extra settings per a maven module for the surefire plugin -->
        <surefire.argLine>${surefire.argLine.noPerf}</surefire.argLine>
        <openl.home>${project.build.directory}/openl-test-${openl.start.milli}</openl.home>
        <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
    </properties>

    <modules>
        <module>DEV</module>
        <module>STUDIO</module>
        <module>WSFrontend</module>
        <module>DEMO</module>
        <module>Util/openl-openapi-model-scaffolding</module>
        <module>Util/openl-openapi-parser</module>
        <module>Util/openl-excel-builder</module>
        <module>Util/org.openl.rules.profiler</module>
        <module>Util/openl-rules-opentelemetry</module>
        <module>ITEST</module>
        <module>Util/openl-maven-plugin</module>
        <module>Util/openl-simple-project-archetype</module>
        <module>Util/openl-project-archetype</module>
        <module>Util/openl-yaml</module>
    </modules>
    <build>
        <defaultGoal>clean verify</defaultGoal>
        <sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
        <resources>
            <resource>
                <directory>resources</directory>
            </resource>
            <resource>
                <directory>src</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>test-resources</directory>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>javacc-maven-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.1.3</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.5.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.6.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>2.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version>
                    <configuration>
                        <release>21</release>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.5.2</version>
                    <configuration>
                        <systemPropertyVariables>
                            <openl.home>${openl.home}</openl.home>
                            <openl.config.location />
                            <java.io.tmpdir>${java.io.tmpdir}</java.io.tmpdir>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.4.0</version>
                    <configuration>
                        <warSourceDirectory>webapp</warSourceDirectory>
                        <webappDirectory>${project.build.directory}/webapp</webappDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.7.1</version>
                    <configuration>
                        <appendAssemblyId>false</appendAssemblyId>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.4.2</version>
                    <configuration>
                        <skipIfEmpty>true</skipIfEmpty>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Build>${buildNumber}</Implementation-Build>
                                <Built-By>${user.name}</Built-By>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <!-- WARNING: Do not update to a higher version. For some unknown reason, dependencies that were
                    copied during the `prepare-package` phase are being removed during the `war` packaging process. -->
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <groupId>org.basepom.maven</groupId>
                    <artifactId>duplicate-finder-maven-plugin</artifactId>
                    <version>2.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>${maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>3.9.1</version>
                    <dependencies>
                        <dependency>
                            <!-- To Support Java 25. Keep till maven-script-interpreter updates to groovy 4.0.27+ -->
                            <groupId>org.apache.groovy</groupId>
                            <artifactId>groovy</artifactId>
                            <version>${groovy.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.21.0</version>
                    <configuration>
                        <siteDirectory>${basedir}/site</siteDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>${jetty.version}</version>
                    <configuration>
                        <systemProperties>
                            <systemProperty>
                                <name>openl.home</name>
                                <value>${project.build.directory}/openl-jetty-${openl.start.milli}</value>
                            </systemProperty>
                            <systemProperty>
                                <name>java.io.tmpdir</name>
                                <value>${java.io.tmpdir}</value>
                            </systemProperty>
                        </systemProperties>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>${h2.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>11.1.1</version>
                </plugin>
                <plugin>
                    <!-- See https://docs.openrewrite.org/recipes/java -->
                    <!-- Usage:    mvn rewrite:run   -->
                    <groupId>org.openrewrite.maven</groupId>
                    <artifactId>rewrite-maven-plugin</artifactId>
                    <version>5.46.3</version>
                    <configuration>
                        <activeRecipes>
                            <recipe>org.openl.rewrite.Recipe</recipe>
                        </activeRecipes>
                        <activeStyles>
                            <style>org.openl.rewrite.Style</style>
                        </activeStyles>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <timestampPropertyName>build.date</timestampPropertyName>
                    <timestampFormat>yyyy-MM-dd</timestampFormat>
                    <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
                    <shortRevisionLength>12</shortRevisionLength>
                    <format>{0}</format>
                    <items>
                        <item>scmVersion</item>
                    </items>
                </configuration>
                <executions>
                    <execution>
                        <!-- Before generate-resources phase -->
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-ea ${jacoco.argLine} -javaagent:${org.mockito:mockito-core:jar} -Xshare:off ${surefire.argLine.opts} ${surefire.argLine} -Dapple.awt.UIElement=true</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>perf</id>
            <activation>
                <property>
                    <name>!noPerf</name>
                </property>
            </activation>
            <properties>
                <surefire.argLine>${surefire.argLine.perf}</surefire.argLine>
            </properties>
        </profile>
        <profile>
            <id>noDocker</id>
            <activation>
                <property>
                    <name>noDocker</name>
                </property>
            </activation>
            <properties>
                <surefire.argLine.opts>-DnoDocker</surefire.argLine.opts>
                <maven.test.skip>${dockerized}</maven.test.skip>
            </properties>
        </profile>
        <profile>
            <id>quick</id>
            <activation>
                <property>
                    <name>quick</name>
                </property>
            </activation>
            <properties>
                <surefire.argLine.opts>-DnoDocker</surefire.argLine.opts>
                <maven.test.skip>${skipTestsForQuick}</maven.test.skip>
                <archetype.test.skip>${skipTestsForQuick}</archetype.test.skip>
                <invoker.skip>${skipTestsForQuick}</invoker.skip>
            </properties>
        </profile>
        <profile>
            <id>skipTests</id>
            <activation>
                <property>
                    <name>skipTests</name>
                </property>
            </activation>
            <properties>
                <maven.test.skip>true</maven.test.skip>
                <archetype.test.skip>true</archetype.test.skip>
                <invoker.skip>true</invoker.skip>
            </properties>
        </profile>
        <profile>
            <id>no-sonar</id>
            <activation>
                <property>
                    <name>!sonar</name>
                </property>
            </activation>
            <properties>
                <!-- Empty for building without JaCoCo agent -->
                <jacoco.argLine />
                <!-- JaCoCo agent cannot be attached if ${argLine} is missed -->
            </properties>
        </profile>
        <profile>
            <id>sonar</id>
            <activation>
                <property>
                    <name>sonar</name>
                </property>
            </activation>
            <properties>
                <sonar />
                <invoker.timeoutInSeconds>40</invoker.timeoutInSeconds>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.8.12</version>
                        <configuration>
                            <propertyName>jacoco.argLine</propertyName>
                            <includes>
                                <include>org/openl/**/*</include>
                            </includes>
                            <excludes>
                                <exclude>org/openl/generated/**/*</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>prepare-ut</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>prepare-it</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>gpg-sign</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.simplify4u.plugins</groupId>
                        <artifactId>sign-maven-plugin</artifactId>
                        <version>1.1.0</version>
                        <configuration>
                            <skip>${maven.deploy.skip}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sources</id>
            <properties>
                <!-- If true, generating of JavaDocs will be skipped  -->
                <maven.javadoc.skip>false</maven.javadoc.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.3.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.11.2</version>
                        <configuration>
                            <!-- To skip invalid HTML4 tags -->
                            <!-- http://openjdk.java.net/jeps/172 -->
                            <doclint>none</doclint>
                            <skip>${maven.javadoc.skip}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>owasp</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <dependencyManagement>
        <dependencies>
            <!-- GRPC -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty-shaded</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <!-- Testing -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit-pioneer</groupId>
                <artifactId>junit-pioneer</artifactId>
                <version>${junit-pioneer.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${mockito.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>kafka</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.dasniko</groupId>
                <artifactId>testcontainers-keycloak</artifactId>
                <version>${testcontainers.keycloak.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>minio</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>mysql</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mariadb.jdbc</groupId>
                <artifactId>mariadb-java-client</artifactId>
                <version>${mariadb.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>oracle-free</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc11</artifactId>
                <version>${oracle.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>mssqlserver</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>mssql-jdbc</artifactId>
                <version>${mssql.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Mock objects library for java -->
            <dependency>
                <groupId>net.ttddyy</groupId>
                <artifactId>datasource-proxy</artifactId>
                <version>${datasource-proxy.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.xmlunit</groupId>
                <artifactId>xmlunit-core</artifactId>
                <version>${xmlunit.version}</version>
            </dependency>
            <!-- Jetty for ITEST -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-webapp</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-annotations</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>apache-jsp</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-home</artifactId>
                <version>${jetty.version}</version>
                <type>zip</type>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <!-- Apache Velocity is a general purpose template engine. -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>
            <!-- Apache Commons Lang, a package of Java utility classes for the classes that are in java.lang's hierarchy,
            or are considered to be so standard as to justify existence in java.lang. -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>
            <!-- The Apache Commons Collections package contains types that extend and augment the Java Collections Framework. -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons.collections4.version}</version>
            </dependency>
            <!-- contains simple encoder and decoders for various formats such as Base64 and Hexadecimal. -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons.codec.version}</version>
            </dependency>
            <!-- The Commons IO library contains utility classes, stream implementations, file filters,
            file comparators, endian transformation classes, and much more. -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <!-- Spring Framework -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${spring.framework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Spring Security -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-bom</artifactId>
                <version>${spring.security.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring Integration -->
            <dependency>
                <groupId>org.springframework.integration</groupId>
                <artifactId>spring-integration-jdbc</artifactId>
                <version>${spring.integration.version}</version>
            </dependency>
            <dependency>
                <!-- This library implements a filter to process X-Forwarded-* headers.
                The reason of this usage: no huge dependencies.
                Neither Spring filter, nor CXF filter works correctly within the same reverse proxy.
                So this library unifies forwarding for both OpenL Studio and RuleServices -->
                <groupId>de.qaware.xff</groupId>
                <artifactId>x-forwarded-filter</artifactId>
                <version>${x-forwarded-filter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>${groovy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-core</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-saml-api</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-saml-impl</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bitbucket.b_c</groupId>
                <artifactId>jose4j</artifactId>
                <version>${jose4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbus-jose-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>net.minidev</groupId>
                <artifactId>json-smart</artifactId>
                <version>${json-smart.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <!--poi and opensaml -->
                <groupId>org.apache.santuario</groupId>
                <artifactId>xmlsec</artifactId>
                <version>${xmlsec.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdicons.jsontools</groupId>
                <artifactId>jsontools-core</artifactId>
                <version>1.7</version>
            </dependency>
            <!-- BEGIN of JSF, JSP, Servlets, RichFaces -->
            <!-- JSF -->
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.faces</artifactId>
                <!-- Don't upgrade to 2.4.0. https://balusc.omnifaces.org/2018/04/do-not-use-orgglassfish-mojarra-240.html
                    At the time of writing the latest official version is 2.3.9.
                 -->
                <version>2.3.9</version>
            </dependency>
            <dependency>
                <groupId>javax.enterprise</groupId>
                <artifactId>cdi-api</artifactId>
                <version>2.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.el</groupId>
                        <artifactId>javax.el-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- RichFaces -->
            <!-- RichFaces reached end-of-life status with version 4.5.17.Final so vulnerabilities will not be fixed.
            To fix that we use forked richfaces implementation until we stop using richfaces features. -->
            <dependency>
                <groupId>com.github.albfernandez.richfaces</groupId>
                <artifactId>richfaces</artifactId>
                <version>4.6.21.ayg</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Servlets -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>jsp-api</artifactId>
                <version>2.1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.2</version>
            </dependency>
            <!-- Provides the API for the Unified Expression Language shared by the JSP 2.1 and JSF 1.2 technologies. -->
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>3.0.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>3.0.0</version>
                <scope>provided</scope>
            </dependency>
            <!--added for fix problem webstudio failure on Websphere, due to new JSF version-->
            <dependency>
                <groupId>javax.websocket</groupId>
                <artifactId>javax.websocket-api</artifactId>
                <version>${javax.websocket-api.version}</version>
            </dependency>
            <!-- Apache log4j, a logging library for Java -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j2-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <!-- The slf4j API -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Byte code generation library -->
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-bom</artifactId>
                <version>${asm.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy-parent</artifactId>
                <version>${byte-buddy.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Java source code generation library -->
            <dependency>
                <groupId>com.helger</groupId>
                <artifactId>jcodemodel</artifactId>
                <version>${jcodemodel.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${jakarta.annotation-api.version}</version>
            </dependency>
            <!-- Apache CXF Runtime JAX-RS Frontend -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-bom</artifactId>
                <version>${cxf.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>${jakarta.ws.rs-api.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.ws</groupId>
                <artifactId>jakarta.xml.ws-api</artifactId>
                <version>${jakarta.xml.ws-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.icegreen</groupId>
                <artifactId>greenmail-junit5</artifactId>
                <version>${greenmail.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <!-- Full jar with all schemas. It's a replacement for poi-ooxml-schemas jar when the full schema is needed -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-full</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <!-- used in POI -->
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons.compress.version}</version>
            </dependency>
            <!-- http://download.java.net/java/jdk9/docs/api/java.xml.bind-summary.html -->
            <!-- Required for Java11 -->
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.xml.bind-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>${jaxb-runtime.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.activation</groupId>
                <artifactId>jakarta.activation</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.activation</groupId>
                <artifactId>jakarta.activation-api</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.istack</groupId>
                <artifactId>istack-commons-runtime</artifactId>
                <version>${istack.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jgrapht</groupId>
                <artifactId>jgrapht-core</artifactId>
                <version>0.9.0</version>
            </dependency>
            <!-- standards-based cache for boosting performance -->
            <dependency>
                <groupId>javax.cache</groupId>
                <artifactId>cache-api</artifactId>
                <version>${javax.cache-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.cache2k</groupId>
                <artifactId>cache2k-jcache</artifactId>
                <version>${cache2k.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>s3</artifactId>
                <version>${amazonaws.version}</version>
                <exclusions>
                    <!-- Classes from the following dependency are duplicated by spring-jcl
                    @see https://github.com/spring-projects/spring-framework/issues/20611
                    -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>software.amazon.awssdk</groupId>
                        <artifactId>netty-nio-client</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>sts</artifactId>
                <version>${amazonaws.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>software.amazon.awssdk</groupId>
                        <artifactId>netty-nio-client</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.azure</groupId>
                <artifactId>azure-storage-blob</artifactId>
                <version>${azure.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-tcnative-boringssl-static</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.datatype</groupId>
                        <artifactId>jackson-datatype-jsr310</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.module</groupId>
                        <artifactId>jackson-module-jaxb-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.dataformat</groupId>
                        <artifactId>jackson-dataformat-xml</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.woodstox</groupId>
                        <artifactId>woodstox-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-core</artifactId>
                <version>${amazonaws.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.openl.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.jgit</groupId>
                <artifactId>org.eclipse.jgit.lfs</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!-- The Bouncy Castle Crypto package is a Java implementation of cryptographic algorithms. This jar
            contains JCE provider and lightweight API for the Bouncy Castle Cryptography APIs for JDK 1.5 to JDK 1.8.
            Used by jgit and saml. -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpg-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <!-- HikariCP - A high-performance JDBC connection pool. -->
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikaricp.version}</version>
            </dependency>
            <!-- the Java in-memory SQL DB -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <!-- Flyway: The agile database migration framework for Java. -->
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>flyway-core</artifactId>
                <!-- Version is frozen due license was changed -->
                <version>4.2.0.3</version>
            </dependency>
            <!-- Hibernate -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.orm.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.activation</groupId>
                        <artifactId>javax.activation-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.orm.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-hikaricp</artifactId>
                <version>${hibernate.orm.version}</version>
            </dependency>
            <!-- Hibernate's Bean Validation (JSR-303) reference implementation. -->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jaxb-annotations</artifactId>
                <version>${jackson.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Jakarta Mail Api for SMTP server connection, depends on Jakarta Activation -->
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>jakarta.mail</artifactId>
                <version>${jakarta.mail.version}</version>
            </dependency>
            <!-- OpenAPI -->
            <dependency>
                <groupId>io.swagger.parser.v3</groupId>
                <artifactId>swagger-parser</artifactId>
                <version>${swagger.parser.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.swagger.parser.v3</groupId>
                        <artifactId>swagger-parser-v2-converter</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-jaxrs2</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-core</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>
            <!-- Kafka -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy-java.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- //Kafka -->
            <!-- Open Telemetry -->
            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-api</artifactId>
                <version>${opentelemetry.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry.javaagent</groupId>
                <artifactId>opentelemetry-javaagent-extension-api</artifactId>
                <version>${opentelemetry.version}-alpha</version>
            </dependency>
            <!-- Javaagent for ITEST -->
            <dependency>
                <groupId>io.opentelemetry.javaagent</groupId>
                <artifactId>opentelemetry-javaagent</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- dependencies to annotations for maven-plugin-plugin -->
            <dependency>
                <groupId>org.apache.maven.plugin-tools</groupId>
                <artifactId>maven-plugin-annotations</artifactId>
                <version>${maven.plugin.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-plugin-api</artifactId>
                <version>${maven.api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-core</artifactId>
                <version>${maven.api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-utils</artifactId>
                <version>${plexus-utils.version}</version>
            </dependency>
            <!-- azure -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${netty.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- //azure -->
            <!-- OpenL modules -->
            <!-- DEV -->
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>org.openl.commons</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>org.openl.rules.util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl</groupId>
                <artifactId>org.openl.spring</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.annotations</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.constrainer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- STUDIO -->
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.activiti</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.demo</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.diff</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.project</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.repository</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.repository.aws</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.repository.git</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.xls.merge</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.repository.azure</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.security</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.security.standalone</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.security.saml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.security.acl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.security.oauth2</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.tableeditor</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.project.ai</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.project.validation.openapi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.project.openapi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.webstudio</artifactId>
                <type>war</type>
                <scope>runtime</scope>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.webstudio.ai</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.webstudio</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.workspace</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.jackson</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.jackson.configuration</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
                <optional>true</optional>
            </dependency>
            <!-- WSFrontend -->
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.annotation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.kafka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws</artifactId>
                <type>pom</type>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws</artifactId>
                <type>war</type>
                <scope>runtime</scope>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.annotation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws</artifactId>
                <classifier>classes</classifier>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.storelogdata</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.storelogdata.db</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.ws.storelogdata.db.annotation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.ruleservice.deployer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Util -->
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>openl-maven-plugin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>openl-openapi-model-scaffolding</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>openl-openapi-parser</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>openl-excel-builder</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>org.openl.rules.webstudio.web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>openl-yaml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openl.rules</groupId>
                <artifactId>openl-rules-opentelemetry</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit-pioneer</groupId>
            <artifactId>junit-pioneer</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Mock objects library for java -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
